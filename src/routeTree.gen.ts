/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NoReservationRouteImport } from './routes/no-reservation'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VariationVariationIdSellerNumberSellerNumberSuccessRouteImport } from './routes/variation.$variationId.sellerNumber.$sellerNumber/success'
import { Route as VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteImport } from './routes/variation.$variationId.sellerNumber.$sellerNumber/_withSessionCounter'
import { Route as VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRouteImport } from './routes/variation.$variationId.sellerNumber.$sellerNumber/_withSessionCounter/seller-details'
import { Route as VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRouteImport } from './routes/variation.$variationId.sellerNumber.$sellerNumber/_withSessionCounter/conditions'

const VariationVariationIdSellerNumberSellerNumberRouteImport = createFileRoute(
  '/variation/$variationId/sellerNumber/$sellerNumber',
)()

const NoReservationRoute = NoReservationRouteImport.update({
  id: '/no-reservation',
  path: '/no-reservation',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VariationVariationIdSellerNumberSellerNumberRoute =
  VariationVariationIdSellerNumberSellerNumberRouteImport.update({
    id: '/variation/$variationId/sellerNumber/$sellerNumber',
    path: '/variation/$variationId/sellerNumber/$sellerNumber',
    getParentRoute: () => rootRouteImport,
  } as any)
const VariationVariationIdSellerNumberSellerNumberSuccessRoute =
  VariationVariationIdSellerNumberSellerNumberSuccessRouteImport.update({
    id: '/success',
    path: '/success',
    getParentRoute: () => VariationVariationIdSellerNumberSellerNumberRoute,
  } as any)
const VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute =
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteImport.update(
    {
      id: '/_withSessionCounter',
      getParentRoute: () => VariationVariationIdSellerNumberSellerNumberRoute,
    } as any,
  )
const VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute =
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRouteImport.update(
    {
      id: '/seller-details',
      path: '/seller-details',
      getParentRoute: () =>
        VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute,
    } as any,
  )
const VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute =
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRouteImport.update(
    {
      id: '/conditions',
      path: '/conditions',
      getParentRoute: () =>
        VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/no-reservation': typeof NoReservationRoute
  '/variation/$variationId/sellerNumber/$sellerNumber': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteWithChildren
  '/variation/$variationId/sellerNumber/$sellerNumber/success': typeof VariationVariationIdSellerNumberSellerNumberSuccessRoute
  '/variation/$variationId/sellerNumber/$sellerNumber/conditions': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute
  '/variation/$variationId/sellerNumber/$sellerNumber/seller-details': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/no-reservation': typeof NoReservationRoute
  '/variation/$variationId/sellerNumber/$sellerNumber': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteWithChildren
  '/variation/$variationId/sellerNumber/$sellerNumber/success': typeof VariationVariationIdSellerNumberSellerNumberSuccessRoute
  '/variation/$variationId/sellerNumber/$sellerNumber/conditions': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute
  '/variation/$variationId/sellerNumber/$sellerNumber/seller-details': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/no-reservation': typeof NoReservationRoute
  '/variation/$variationId/sellerNumber/$sellerNumber': typeof VariationVariationIdSellerNumberSellerNumberRouteWithChildren
  '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteWithChildren
  '/variation/$variationId/sellerNumber/$sellerNumber/success': typeof VariationVariationIdSellerNumberSellerNumberSuccessRoute
  '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/conditions': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute
  '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/seller-details': typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/no-reservation'
    | '/variation/$variationId/sellerNumber/$sellerNumber'
    | '/variation/$variationId/sellerNumber/$sellerNumber/success'
    | '/variation/$variationId/sellerNumber/$sellerNumber/conditions'
    | '/variation/$variationId/sellerNumber/$sellerNumber/seller-details'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/no-reservation'
    | '/variation/$variationId/sellerNumber/$sellerNumber'
    | '/variation/$variationId/sellerNumber/$sellerNumber/success'
    | '/variation/$variationId/sellerNumber/$sellerNumber/conditions'
    | '/variation/$variationId/sellerNumber/$sellerNumber/seller-details'
  id:
    | '__root__'
    | '/'
    | '/no-reservation'
    | '/variation/$variationId/sellerNumber/$sellerNumber'
    | '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter'
    | '/variation/$variationId/sellerNumber/$sellerNumber/success'
    | '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/conditions'
    | '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/seller-details'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NoReservationRoute: typeof NoReservationRoute
  VariationVariationIdSellerNumberSellerNumberRoute: typeof VariationVariationIdSellerNumberSellerNumberRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/no-reservation': {
      id: '/no-reservation'
      path: '/no-reservation'
      fullPath: '/no-reservation'
      preLoaderRoute: typeof NoReservationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/variation/$variationId/sellerNumber/$sellerNumber': {
      id: '/variation/$variationId/sellerNumber/$sellerNumber'
      path: '/variation/$variationId/sellerNumber/$sellerNumber'
      fullPath: '/variation/$variationId/sellerNumber/$sellerNumber'
      preLoaderRoute: typeof VariationVariationIdSellerNumberSellerNumberRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/variation/$variationId/sellerNumber/$sellerNumber/success': {
      id: '/variation/$variationId/sellerNumber/$sellerNumber/success'
      path: '/success'
      fullPath: '/variation/$variationId/sellerNumber/$sellerNumber/success'
      preLoaderRoute: typeof VariationVariationIdSellerNumberSellerNumberSuccessRouteImport
      parentRoute: typeof VariationVariationIdSellerNumberSellerNumberRoute
    }
    '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter': {
      id: '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter'
      path: '/variation/$variationId/sellerNumber/$sellerNumber'
      fullPath: '/variation/$variationId/sellerNumber/$sellerNumber'
      preLoaderRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteImport
      parentRoute: typeof VariationVariationIdSellerNumberSellerNumberRoute
    }
    '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/seller-details': {
      id: '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/seller-details'
      path: '/seller-details'
      fullPath: '/variation/$variationId/sellerNumber/$sellerNumber/seller-details'
      preLoaderRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRouteImport
      parentRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute
    }
    '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/conditions': {
      id: '/variation/$variationId/sellerNumber/$sellerNumber/_withSessionCounter/conditions'
      path: '/conditions'
      fullPath: '/variation/$variationId/sellerNumber/$sellerNumber/conditions'
      preLoaderRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRouteImport
      parentRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute
    }
  }
}

interface VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteChildren {
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute
}

const VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteChildren: VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteChildren =
  {
    VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute:
      VariationVariationIdSellerNumberSellerNumberWithSessionCounterConditionsRoute,
    VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute:
      VariationVariationIdSellerNumberSellerNumberWithSessionCounterSellerDetailsRoute,
  }

const VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteWithChildren =
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute._addFileChildren(
    VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteChildren,
  )

interface VariationVariationIdSellerNumberSellerNumberRouteChildren {
  VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute: typeof VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteWithChildren
  VariationVariationIdSellerNumberSellerNumberSuccessRoute: typeof VariationVariationIdSellerNumberSellerNumberSuccessRoute
}

const VariationVariationIdSellerNumberSellerNumberRouteChildren: VariationVariationIdSellerNumberSellerNumberRouteChildren =
  {
    VariationVariationIdSellerNumberSellerNumberWithSessionCounterRoute:
      VariationVariationIdSellerNumberSellerNumberWithSessionCounterRouteWithChildren,
    VariationVariationIdSellerNumberSellerNumberSuccessRoute:
      VariationVariationIdSellerNumberSellerNumberSuccessRoute,
  }

const VariationVariationIdSellerNumberSellerNumberRouteWithChildren =
  VariationVariationIdSellerNumberSellerNumberRoute._addFileChildren(
    VariationVariationIdSellerNumberSellerNumberRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NoReservationRoute: NoReservationRoute,
  VariationVariationIdSellerNumberSellerNumberRoute:
    VariationVariationIdSellerNumberSellerNumberRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
